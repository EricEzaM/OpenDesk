CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    migration_id character varying(150) NOT NULL,
    product_version character varying(32) NOT NULL,
    CONSTRAINT pk___ef_migrations_history PRIMARY KEY (migration_id)
);

START TRANSACTION;

CREATE TABLE blobs (
    id character varying(50) NOT NULL,
    uri text NOT NULL,
    expiry timestamp with time zone NOT NULL,
    deleted_by character varying(50) NULL,
    deleted_at timestamp with time zone NULL,
    created_by character varying(50) NULL,
    created_at timestamp with time zone NOT NULL,
    last_modified_by character varying(50) NULL,
    last_modified_at timestamp with time zone NULL,
    CONSTRAINT pk_blobs PRIMARY KEY (id)
);

CREATE TABLE roles (
    id character varying(50) NOT NULL,
    description character varying(256) NULL,
    name character varying(256) NOT NULL,
    normalized_name character varying(256) NOT NULL,
    concurrency_stamp text NULL,
    CONSTRAINT pk_roles PRIMARY KEY (id)
);

CREATE TABLE users (
    id character varying(50) NOT NULL,
    display_name character varying(50) NOT NULL,
    user_name character varying(256) NOT NULL,
    normalized_user_name character varying(256) NOT NULL,
    email character varying(256) NULL,
    normalized_email character varying(256) NULL,
    email_confirmed boolean NOT NULL,
    password_hash text NULL,
    security_stamp text NULL,
    concurrency_stamp text NULL,
    phone_number character varying(50) NULL,
    phone_number_confirmed boolean NOT NULL,
    two_factor_enabled boolean NOT NULL,
    lockout_end timestamp with time zone NULL,
    lockout_enabled boolean NOT NULL,
    access_failed_count integer NOT NULL,
    CONSTRAINT pk_users PRIMARY KEY (id)
);

CREATE TABLE offices (
    id character varying(50) NOT NULL,
    location character varying(100) NOT NULL,
    sub_location character varying(100) NOT NULL,
    name character varying(100) NOT NULL,
    image_id character varying(50) NULL,
    deleted_by character varying(50) NULL,
    deleted_at timestamp with time zone NULL,
    created_by character varying(50) NULL,
    created_at timestamp with time zone NOT NULL,
    last_modified_by character varying(50) NULL,
    last_modified_at timestamp with time zone NULL,
    CONSTRAINT pk_offices PRIMARY KEY (id),
    CONSTRAINT fk_offices_blobs_image_id FOREIGN KEY (image_id) REFERENCES blobs (id) ON DELETE RESTRICT
);

CREATE TABLE role_claims (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    role_id character varying(50) NOT NULL,
    claim_type character varying(256) NULL,
    claim_value character varying(256) NULL,
    CONSTRAINT pk_role_claims PRIMARY KEY (id),
    CONSTRAINT fk_role_claims_roles_role_id FOREIGN KEY (role_id) REFERENCES roles (id) ON DELETE CASCADE
);

CREATE TABLE user_claims (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    user_id character varying(50) NOT NULL,
    claim_type character varying(256) NULL,
    claim_value character varying(256) NULL,
    CONSTRAINT pk_user_claims PRIMARY KEY (id),
    CONSTRAINT fk_user_claims_users_user_id FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE user_logins (
    login_provider character varying(256) NOT NULL,
    provider_key character varying(256) NOT NULL,
    provider_display_name character varying(256) NULL,
    user_id character varying(50) NOT NULL,
    CONSTRAINT pk_user_logins PRIMARY KEY (login_provider, provider_key),
    CONSTRAINT fk_user_logins_users_user_id FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE user_roles (
    user_id character varying(50) NOT NULL,
    role_id character varying(50) NOT NULL,
    CONSTRAINT pk_user_roles PRIMARY KEY (user_id, role_id),
    CONSTRAINT fk_user_roles_roles_role_id FOREIGN KEY (role_id) REFERENCES roles (id) ON DELETE CASCADE,
    CONSTRAINT fk_user_roles_users_user_id FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE user_tokens (
    user_id character varying(50) NOT NULL,
    login_provider character varying(256) NOT NULL,
    name character varying(256) NOT NULL,
    value character varying(256) NULL,
    CONSTRAINT pk_user_tokens PRIMARY KEY (user_id, login_provider, name),
    CONSTRAINT fk_user_tokens_users_user_id FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE desks (
    id character varying(50) NOT NULL,
    name character varying(100) NOT NULL,
    diagram_position_x integer NULL,
    diagram_position_y integer NULL,
    office_id character varying(50) NULL,
    deleted_by character varying(50) NULL,
    deleted_at timestamp with time zone NULL,
    created_by character varying(50) NULL,
    created_at timestamp with time zone NOT NULL,
    last_modified_by character varying(50) NULL,
    last_modified_at timestamp with time zone NULL,
    CONSTRAINT pk_desks PRIMARY KEY (id),
    CONSTRAINT fk_desks_offices_office_id FOREIGN KEY (office_id) REFERENCES offices (id) ON DELETE RESTRICT
);

CREATE TABLE bookings (
    id character varying(50) NOT NULL,
    user_id character varying(50) NOT NULL,
    desk_id character varying(50) NULL,
    start_date_time timestamp with time zone NOT NULL,
    end_date_time timestamp with time zone NOT NULL,
    open_desk_user_id character varying(50) NULL,
    deleted_by character varying(50) NULL,
    deleted_at timestamp with time zone NULL,
    created_by character varying(50) NULL,
    created_at timestamp with time zone NOT NULL,
    last_modified_by character varying(50) NULL,
    last_modified_at timestamp with time zone NULL,
    CONSTRAINT pk_bookings PRIMARY KEY (id),
    CONSTRAINT fk_bookings_desks_desk_id FOREIGN KEY (desk_id) REFERENCES desks (id) ON DELETE RESTRICT,
    CONSTRAINT fk_bookings_users_open_desk_user_id FOREIGN KEY (open_desk_user_id) REFERENCES users (id) ON DELETE RESTRICT
);

CREATE INDEX ix_bookings_desk_id ON bookings (desk_id);

CREATE INDEX ix_bookings_open_desk_user_id ON bookings (open_desk_user_id);

CREATE INDEX ix_desks_office_id ON desks (office_id);

CREATE INDEX ix_offices_image_id ON offices (image_id);

CREATE INDEX ix_role_claims_role_id ON role_claims (role_id);

CREATE UNIQUE INDEX "RoleNameIndex" ON roles (normalized_name);

CREATE INDEX ix_user_claims_user_id ON user_claims (user_id);

CREATE INDEX ix_user_logins_user_id ON user_logins (user_id);

CREATE INDEX ix_user_roles_role_id ON user_roles (role_id);

CREATE INDEX "EmailIndex" ON users (normalized_email);

CREATE UNIQUE INDEX "UserNameIndex" ON users (normalized_user_name);

INSERT INTO "__EFMigrationsHistory" (migration_id, product_version)
VALUES ('20211011153431_Initial', '5.0.10');

COMMIT;

